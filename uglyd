#!/usr/bin/env python
# -*- coding: utf-8 -*-

from __future__ import division, print_function, absolute_import

__all__ = ["update_feeds", "send_emails"]

# Enable virtual environment.
import os
activate_this = os.path.join(os.path.dirname(os.path.abspath(__file__)),
                             "venv", "bin", "activate_this.py")
execfile(activate_this, dict(__file__=activate_this))

import sys
import time
import logging
import traceback
from ugly import create_app
from ugly.models import User, Feed

largs = dict(level=logging.INFO,
             format="[%(asctime)s] %(name)s:%(levelname)s:%(message)s")
if "--log" in sys.argv:
    largs["filename"] = sys.argv[sys.argv.index("--log") + 1]
logging.basicConfig(**largs)

# Set up the required DB context.
if "--config" in sys.argv:
    app = create_app(sys.argv[sys.argv.index("--config") + 1])
else:
    app = create_app()
app.test_request_context().push()


def update_feeds():
    for feed in Feed.query:
        try:
            feed.update()
        except:
            logging.error("uglyd failed to update feed: {0}".format(feed.url))
            logging.error(traceback.format_exc())


def send_emails():
    for user in User.query.filter_by(active=True):
        try:
            user.deliver_entries()
        except:
            logging.error("uglyd failed to send emails to: {0}"
                          .format(user.get_email()))
            logging.error(traceback.format_exc())


if __name__ == "__main__":
    strt = time.time()

    logging.info("Updating feeds...")
    update_feeds()
    logging.info("... took {0} seconds".format(time.time() - strt))

    strt = time.time()
    logging.info("Sending emails...")
    send_emails()
    logging.info("... took {0} seconds".format(time.time() - strt))
